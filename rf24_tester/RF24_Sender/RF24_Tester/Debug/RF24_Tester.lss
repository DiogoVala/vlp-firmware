
RF24_Tester.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000b17  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000b17  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000b17  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c88  00000000  00000000  00000ca2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a28  00000000  00000000  0000292a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009d2  00000000  00000000  00003352  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002d8  00000000  00000000  00003d24  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000242  00000000  00000000  00003ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000980  00000000  00000000  0000423e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  00004bbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000a6e  00000a6e  00000b02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004cc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .progmemx.data 00000010  000000c8  000000c8  0000015c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 15 .rodata       00000007  0080010b  00000a7c  00000b10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 16 .text.main    000000b0  000005dc  000005dc  00000670  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.nrf24_transmitSync 00000020  000009ce  000009ce  00000a62  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.nrf24_ce_digitalWrite 00000014  00000a26  00000a26  00000aba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.nrf24_csn_digitalWrite 00000014  00000a3a  00000a3a  00000ace  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.nrf24_configRegister 00000032  00000922  00000922  000009b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.nrf24_powerUpTx 00000012  00000a4e  00000a4e  00000ae2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.nrf24_powerUpRx 00000036  00000880  00000880  00000914  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.nrf24_config 0000006c  00000704  00000704  00000798  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.nrf24_send 00000058  00000770  00000770  00000804  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.nrf24_writeRegister 0000003a  0000080e  0000080e  000008a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.nrf24_rx_address 00000022  000009ac  000009ac  00000a40  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.nrf24_tx_address 00000020  000009ee  000009ee  00000a82  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.nrf24_init 0000002c  00000954  00000954  000009e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .data.nrf24_addr 0000000a  00800101  00000a72  00000b06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 30 .text.uart_init 00000018  00000a0e  00000a0e  00000aa2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.uart_putc 0000000e  00000a60  00000a60  00000af4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.uart_puts 0000002c  00000980  00000980  00000a14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.avrlibc 00000046  000007c8  000007c8  0000085c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.avrlibc 00000448  000000d8  000000d8  0000016c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.avrlibc 00000036  000008b6  000008b6  0000094a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.avrlibc 00000078  0000068c  0000068c  00000720  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.avrlibc 000000bc  00000520  00000520  000005b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.libgcc.prologue 00000038  00000848  00000848  000008dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.libgcc.prologue 00000036  000008ec  000008ec  00000980  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
   8:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
   c:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  10:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  14:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  18:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  1c:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  20:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  24:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  28:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  2c:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  30:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  34:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  38:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  3c:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  40:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  44:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  48:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  4c:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  50:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  54:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  58:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  5c:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  60:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>
  64:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 01       	movw	r0, r2
  6c:	80 01       	movw	r16, r0
  6e:	01 01       	movw	r0, r2
  70:	12 00       	.word	0x0012	; ????
  72:	0a 72       	andi	r16, 0x2A	; 42

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	e8 e6       	ldi	r30, 0x68	; 104
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	40 e0       	ldi	r20, 0x00	; 0
  86:	17 c0       	rjmp	.+46     	; 0xb6 <__do_clear_bss+0x8>
  88:	b5 91       	lpm	r27, Z+
  8a:	a5 91       	lpm	r26, Z+
  8c:	35 91       	lpm	r19, Z+
  8e:	25 91       	lpm	r18, Z+
  90:	05 91       	lpm	r16, Z+
  92:	07 fd       	sbrc	r16, 7
  94:	0c c0       	rjmp	.+24     	; 0xae <__do_clear_bss>
  96:	95 91       	lpm	r25, Z+
  98:	85 91       	lpm	r24, Z+
  9a:	ef 01       	movw	r28, r30
  9c:	f9 2f       	mov	r31, r25
  9e:	e8 2f       	mov	r30, r24
  a0:	05 90       	lpm	r0, Z+
  a2:	0d 92       	st	X+, r0
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0x20>
  aa:	fe 01       	movw	r30, r28
  ac:	04 c0       	rjmp	.+8      	; 0xb6 <__do_clear_bss+0x8>

000000ae <__do_clear_bss>:
  ae:	1d 92       	st	X+, r1
  b0:	a2 17       	cp	r26, r18
  b2:	b3 07       	cpc	r27, r19
  b4:	e1 f7       	brne	.-8      	; 0xae <__do_clear_bss>
  b6:	e4 37       	cpi	r30, 0x74	; 116
  b8:	f4 07       	cpc	r31, r20
  ba:	31 f7       	brne	.-52     	; 0x88 <__do_copy_data+0x8>
  bc:	0e 94 ee 02 	call	0x5dc	; 0x5dc <main>
  c0:	0c 94 62 00 	jmp	0xc4	; 0xc4 <_exit>

000000c4 <_exit>:
  c4:	f8 94       	cli

000000c6 <__stop_program>:
  c6:	ff cf       	rjmp	.-2      	; 0xc6 <__stop_program>

Disassembly of section .text:

00000a6e <__bad_interrupt>:
 a6e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.main:

000005dc <main>:
#include "spi.h"
#include "uart.h"
#include "config.h"

int main(void)
{
 5dc:	cf 93       	push	r28
 5de:	df 93       	push	r29
 5e0:	cd b7       	in	r28, 0x3d	; 61
 5e2:	de b7       	in	r29, 0x3e	; 62
 5e4:	6b 97       	sbiw	r28, 0x1b	; 27
 5e6:	0f b6       	in	r0, 0x3f	; 63
 5e8:	f8 94       	cli
 5ea:	de bf       	out	0x3e, r29	; 62
 5ec:	0f be       	out	0x3f, r0	; 63
 5ee:	cd bf       	out	0x3d, r28	; 61
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
 5f0:	0f b6       	in	r0, 0x3f	; 63
 5f2:	f8 94       	cli
 5f4:	a8 95       	wdr
 5f6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7f8060>
 5fa:	88 61       	ori	r24, 0x18	; 24
 5fc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7f8060>
 600:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7f8060>
 604:	0f be       	out	0x3f, r0	; 63
	wdt_disable();
	uart_init();
 606:	0e 94 07 05 	call	0xa0e	; 0xa0e <uart_init>
    while (!(SPSR & _BV(SPIF))); /* Waits until SPIF is set */
    return SPDR; /* Reading the data register after reading SPIF clears SPIF */
}

inline static void spi_init(void) {
	SPI_DDR = SPI_DDR | _BV(SPI_SS_NRF24) |_BV(SPI_SS_POT) | _BV(SPI_MOSI) |  _BV(SPI_SCK); /* Set pins as output */
 60a:	84 b1       	in	r24, 0x04	; 4
 60c:	8e 62       	ori	r24, 0x2E	; 46
 60e:	84 b9       	out	0x04, r24	; 4
    SPCR = _BV(SPE) | 0 | _BV(MSTR) | (SPI_MODE0 & SPI_MODE_MASK) | (SPI_CLOCK_DIV4 & SPI_CLOCK_MASK);
 610:	80 e5       	ldi	r24, 0x50	; 80
 612:	8c bd       	out	0x2c, r24	; 44
	spi_init();
	nrf24_init();
 614:	0e 94 aa 04 	call	0x954	; 0x954 <nrf24_init>
	
	uint8_t command[]={'T', 'E', 'S', 'T', 'I', 'N', 'G'};
 618:	87 e0       	ldi	r24, 0x07	; 7
 61a:	eb e0       	ldi	r30, 0x0B	; 11
 61c:	f1 e0       	ldi	r31, 0x01	; 1
 61e:	de 01       	movw	r26, r28
 620:	11 96       	adiw	r26, 0x01	; 1
 622:	01 90       	ld	r0, Z+
 624:	0d 92       	st	X+, r0
 626:	8a 95       	dec	r24
 628:	e1 f7       	brne	.-8      	; 0x622 <main+0x46>
	
	uint8_t tx_result;
	
	uint32_t try=0;

	uint8_t buf[20]={};
 62a:	fe 01       	movw	r30, r28
 62c:	38 96       	adiw	r30, 0x08	; 8
 62e:	84 e1       	ldi	r24, 0x14	; 20
 630:	df 01       	movw	r26, r30
 632:	1d 92       	st	X+, r1
 634:	8a 95       	dec	r24
 636:	e9 f7       	brne	.-6      	; 0x632 <main+0x56>
		
	uart_puts("\r\n");
 638:	68 ec       	ldi	r22, 0xC8	; 200
 63a:	70 e0       	ldi	r23, 0x00	; 0
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	0e 94 c0 04 	call	0x980	; 0x980 <uart_puts>
	
	uint8_t command[]={'T', 'E', 'S', 'T', 'I', 'N', 'G'};
	
	uint8_t tx_result;
	
	uint32_t try=0;
 642:	80 e0       	ldi	r24, 0x00	; 0
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	dc 01       	movw	r26, r24
		
	uart_puts("\r\n");
	
    while(1)
    {
		sprintf(buf, "\rTry %d ... ", (int)try++);
 648:	6c 01       	movw	r12, r24
 64a:	7d 01       	movw	r14, r26
 64c:	2f ef       	ldi	r18, 0xFF	; 255
 64e:	c2 1a       	sub	r12, r18
 650:	d2 0a       	sbc	r13, r18
 652:	e2 0a       	sbc	r14, r18
 654:	f2 0a       	sbc	r15, r18
 656:	9f 93       	push	r25
 658:	8f 93       	push	r24
 65a:	8b ec       	ldi	r24, 0xCB	; 203
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	a0 e0       	ldi	r26, 0x00	; 0
 660:	af 93       	push	r26
 662:	9f 93       	push	r25
 664:	8f 93       	push	r24
 666:	ce 01       	movw	r24, r28
 668:	08 96       	adiw	r24, 0x08	; 8
 66a:	9f 93       	push	r25
 66c:	8f 93       	push	r24
 66e:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <sprintf>
		//uart_puts(buf);
		nrf24_send(command, sizeof(command));
 672:	67 e0       	ldi	r22, 0x07	; 7
 674:	ce 01       	movw	r24, r28
 676:	01 96       	adiw	r24, 0x01	; 1
 678:	0e 94 b8 03 	call	0x770	; 0x770 <nrf24_send>
		
	uart_puts("\r\n");
	
    while(1)
    {
		sprintf(buf, "\rTry %d ... ", (int)try++);
 67c:	0f b6       	in	r0, 0x3f	; 63
 67e:	f8 94       	cli
 680:	de bf       	out	0x3e, r29	; 62
 682:	0f be       	out	0x3f, r0	; 63
 684:	cd bf       	out	0x3d, r28	; 61
 686:	d7 01       	movw	r26, r14
 688:	c6 01       	movw	r24, r12
 68a:	de cf       	rjmp	.-68     	; 0x648 <main+0x6c>

Disassembly of section .text.nrf24_transmitSync:

000009ce <nrf24_transmitSync>:

}

/* send multiple bytes over SPI */
void nrf24_transmitSync(uint8_t* dataout,uint8_t len)
{
 9ce:	ac 01       	movw	r20, r24
	//uint8_t buf[2];
	//uart_puts("\r\n");
	for(uint8_t i=0; i<len ;i++)
 9d0:	90 e0       	ldi	r25, 0x00	; 0
 9d2:	0a c0       	rjmp	.+20     	; 0x9e8 <nrf24_transmitSync+0x1a>
	{
		spi_exchange(dataout[i]);
 9d4:	fa 01       	movw	r30, r20
 9d6:	e9 0f       	add	r30, r25
 9d8:	f1 1d       	adc	r31, r1
 9da:	20 81       	ld	r18, Z
#define SPI_MODE_MASK 0x0C  // CPOL = bit 3, CPHA = bit 2 on SPCR
#define SPI_CLOCK_MASK 0x03  // SPR1 = bit 1, SPR0 = bit 0 on SPCR

inline static uint8_t spi_exchange(uint8_t data) {

    SPDR = data;
 9dc:	2e bd       	out	0x2e, r18	; 46
    while (!(SPSR & _BV(SPIF))); /* Waits until SPIF is set */
 9de:	0d b4       	in	r0, 0x2d	; 45
 9e0:	07 fe       	sbrs	r0, 7
 9e2:	fd cf       	rjmp	.-6      	; 0x9de <nrf24_transmitSync+0x10>
    return SPDR; /* Reading the data register after reading SPIF clears SPIF */
 9e4:	8e b5       	in	r24, 0x2e	; 46
/* send multiple bytes over SPI */
void nrf24_transmitSync(uint8_t* dataout,uint8_t len)
{
	//uint8_t buf[2];
	//uart_puts("\r\n");
	for(uint8_t i=0; i<len ;i++)
 9e6:	9f 5f       	subi	r25, 0xFF	; 255
 9e8:	96 17       	cp	r25, r22
 9ea:	a0 f3       	brcs	.-24     	; 0x9d4 <nrf24_transmitSync+0x6>
		spi_exchange(dataout[i]);
		//sprintf(buf, "%d, ", dataout[i]);
		//uart_puts(buf);
	}

}
 9ec:	08 95       	ret

Disassembly of section .text.nrf24_ce_digitalWrite:

00000a26 <nrf24_ce_digitalWrite>:
	nrf24_csn_digitalWrite(HIGH);
}

void nrf24_ce_digitalWrite(uint8_t state)
{
	if(state)
 a26:	88 23       	and	r24, r24
 a28:	21 f0       	breq	.+8      	; 0xa32 <nrf24_ce_digitalWrite+0xc>
	{
		set_bit(NRF24_PORT,NRF24_CE);
 a2a:	85 b1       	in	r24, 0x05	; 5
 a2c:	81 60       	ori	r24, 0x01	; 1
 a2e:	85 b9       	out	0x05, r24	; 5
 a30:	08 95       	ret
	}
	else
	{
		clr_bit(NRF24_PORT,NRF24_CE);
 a32:	85 b1       	in	r24, 0x05	; 5
 a34:	8e 7f       	andi	r24, 0xFE	; 254
 a36:	85 b9       	out	0x05, r24	; 5
 a38:	08 95       	ret

Disassembly of section .text.nrf24_csn_digitalWrite:

00000a3a <nrf24_csn_digitalWrite>:
	}
}

void nrf24_csn_digitalWrite(uint8_t state)
{
	if(state)
 a3a:	88 23       	and	r24, r24
 a3c:	21 f0       	breq	.+8      	; 0xa46 <nrf24_csn_digitalWrite+0xc>
	{
		set_bit(NRF24_PORT, NRF24_CS);
 a3e:	85 b1       	in	r24, 0x05	; 5
 a40:	84 60       	ori	r24, 0x04	; 4
 a42:	85 b9       	out	0x05, r24	; 5
 a44:	08 95       	ret
	}
	else
	{
		clr_bit(NRF24_PORT, NRF24_CS);
 a46:	85 b1       	in	r24, 0x05	; 5
 a48:	8b 7f       	andi	r24, 0xFB	; 251
 a4a:	85 b9       	out	0x05, r24	; 5
 a4c:	08 95       	ret

Disassembly of section .text.nrf24_configRegister:

00000922 <nrf24_configRegister>:
	for(i=0;i<len;i++)
	{
		datain[i] = spi_exchange(dataout[i]);
	}

}
 922:	cf 93       	push	r28
 924:	df 93       	push	r29
 926:	c8 2f       	mov	r28, r24
 928:	d6 2f       	mov	r29, r22
 92a:	80 e0       	ldi	r24, 0x00	; 0
 92c:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 930:	cf 71       	andi	r28, 0x1F	; 31
 932:	c0 62       	ori	r28, 0x20	; 32
 934:	ce bd       	out	0x2e, r28	; 46
 936:	0d b4       	in	r0, 0x2d	; 45
 938:	07 fe       	sbrs	r0, 7
 93a:	fd cf       	rjmp	.-6      	; 0x936 <nrf24_configRegister+0x14>
 93c:	8e b5       	in	r24, 0x2e	; 46
 93e:	de bd       	out	0x2e, r29	; 46
 940:	0d b4       	in	r0, 0x2d	; 45
 942:	07 fe       	sbrs	r0, 7
 944:	fd cf       	rjmp	.-6      	; 0x940 <nrf24_configRegister+0x1e>
 946:	8e b5       	in	r24, 0x2e	; 46
 948:	81 e0       	ldi	r24, 0x01	; 1
 94a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 94e:	df 91       	pop	r29
 950:	cf 91       	pop	r28
 952:	08 95       	ret

Disassembly of section .text.nrf24_powerUpTx:

00000a4e <nrf24_powerUpTx>:
	nrf24_ce_digitalWrite(HIGH);
}

void nrf24_powerUpTx()
{
	nrf24_configRegister(STATUS,(1<<RX_DR)|(1<<TX_DS)|(1<<MAX_RT));
 a4e:	60 e7       	ldi	r22, 0x70	; 112
 a50:	87 e0       	ldi	r24, 0x07	; 7
 a52:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>

	nrf24_configRegister(CONFIG,nrf24_CONFIG|((1<<PWR_UP)|(0<<PRIM_RX)));
 a56:	6a e0       	ldi	r22, 0x0A	; 10
 a58:	80 e0       	ldi	r24, 0x00	; 0
 a5a:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 a5e:	08 95       	ret

Disassembly of section .text.nrf24_powerUpRx:

00000880 <nrf24_powerUpRx>:
	for(i=0;i<len;i++)
	{
		datain[i] = spi_exchange(dataout[i]);
	}

}
 880:	80 e0       	ldi	r24, 0x00	; 0
 882:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 886:	82 ee       	ldi	r24, 0xE2	; 226
 888:	8e bd       	out	0x2e, r24	; 46
 88a:	0d b4       	in	r0, 0x2d	; 45
 88c:	07 fe       	sbrs	r0, 7
 88e:	fd cf       	rjmp	.-6      	; 0x88a <nrf24_powerUpRx+0xa>
 890:	8e b5       	in	r24, 0x2e	; 46
 892:	81 e0       	ldi	r24, 0x01	; 1
 894:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 898:	60 e7       	ldi	r22, 0x70	; 112
 89a:	87 e0       	ldi	r24, 0x07	; 7
 89c:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 8a0:	80 e0       	ldi	r24, 0x00	; 0
 8a2:	0e 94 13 05 	call	0xa26	; 0xa26 <nrf24_ce_digitalWrite>
 8a6:	6b e0       	ldi	r22, 0x0B	; 11
 8a8:	80 e0       	ldi	r24, 0x00	; 0
 8aa:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 8ae:	81 e0       	ldi	r24, 0x01	; 1
 8b0:	0e 94 13 05 	call	0xa26	; 0xa26 <nrf24_ce_digitalWrite>
 8b4:	08 95       	ret

Disassembly of section .text.nrf24_config:

00000704 <nrf24_config>:
 704:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 708:	68 2f       	mov	r22, r24
 70a:	85 e0       	ldi	r24, 0x05	; 5
 70c:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 710:	60 e0       	ldi	r22, 0x00	; 0
 712:	81 e1       	ldi	r24, 0x11	; 17
 714:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 718:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 71c:	82 e1       	ldi	r24, 0x12	; 18
 71e:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 722:	60 e0       	ldi	r22, 0x00	; 0
 724:	83 e1       	ldi	r24, 0x13	; 19
 726:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 72a:	60 e0       	ldi	r22, 0x00	; 0
 72c:	84 e1       	ldi	r24, 0x14	; 20
 72e:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 732:	60 e0       	ldi	r22, 0x00	; 0
 734:	85 e1       	ldi	r24, 0x15	; 21
 736:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 73a:	60 e0       	ldi	r22, 0x00	; 0
 73c:	86 e1       	ldi	r24, 0x16	; 22
 73e:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 742:	6e e0       	ldi	r22, 0x0E	; 14
 744:	86 e0       	ldi	r24, 0x06	; 6
 746:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 74a:	68 e0       	ldi	r22, 0x08	; 8
 74c:	80 e0       	ldi	r24, 0x00	; 0
 74e:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	81 e0       	ldi	r24, 0x01	; 1
 756:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 75a:	63 e0       	ldi	r22, 0x03	; 3
 75c:	82 e0       	ldi	r24, 0x02	; 2
 75e:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 762:	60 e0       	ldi	r22, 0x00	; 0
 764:	8c e1       	ldi	r24, 0x1C	; 28
 766:	0e 94 91 04 	call	0x922	; 0x922 <nrf24_configRegister>
 76a:	0e 94 40 04 	call	0x880	; 0x880 <nrf24_powerUpRx>
 76e:	08 95       	ret

Disassembly of section .text.nrf24_send:

00000770 <nrf24_send>:
 770:	1f 93       	push	r17
 772:	cf 93       	push	r28
 774:	df 93       	push	r29
 776:	ec 01       	movw	r28, r24
 778:	16 2f       	mov	r17, r22
 77a:	80 e0       	ldi	r24, 0x00	; 0
 77c:	0e 94 13 05 	call	0xa26	; 0xa26 <nrf24_ce_digitalWrite>
 780:	0e 94 27 05 	call	0xa4e	; 0xa4e <nrf24_powerUpTx>
 784:	80 e0       	ldi	r24, 0x00	; 0
 786:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 78a:	80 ea       	ldi	r24, 0xA0	; 160
 78c:	8e bd       	out	0x2e, r24	; 46
 78e:	0d b4       	in	r0, 0x2d	; 45
 790:	07 fe       	sbrs	r0, 7
 792:	fd cf       	rjmp	.-6      	; 0x78e <nrf24_send+0x1e>
 794:	8e b5       	in	r24, 0x2e	; 46
 796:	80 e0       	ldi	r24, 0x00	; 0
 798:	0b c0       	rjmp	.+22     	; 0x7b0 <nrf24_send+0x40>
 79a:	9e 01       	movw	r18, r28
 79c:	2f 5f       	subi	r18, 0xFF	; 255
 79e:	3f 4f       	sbci	r19, 0xFF	; 255
 7a0:	98 81       	ld	r25, Y
 7a2:	9e bd       	out	0x2e, r25	; 46
 7a4:	0d b4       	in	r0, 0x2d	; 45
 7a6:	07 fe       	sbrs	r0, 7
 7a8:	fd cf       	rjmp	.-6      	; 0x7a4 <nrf24_send+0x34>
 7aa:	9e b5       	in	r25, 0x2e	; 46
 7ac:	8f 5f       	subi	r24, 0xFF	; 255
 7ae:	e9 01       	movw	r28, r18
 7b0:	81 17       	cp	r24, r17
 7b2:	98 f3       	brcs	.-26     	; 0x79a <nrf24_send+0x2a>
 7b4:	81 e0       	ldi	r24, 0x01	; 1
 7b6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	0e 94 13 05 	call	0xa26	; 0xa26 <nrf24_ce_digitalWrite>
 7c0:	df 91       	pop	r29
 7c2:	cf 91       	pop	r28
 7c4:	1f 91       	pop	r17
 7c6:	08 95       	ret

Disassembly of section .text.nrf24_writeRegister:

0000080e <nrf24_writeRegister>:
 80e:	0f 93       	push	r16
 810:	1f 93       	push	r17
 812:	cf 93       	push	r28
 814:	df 93       	push	r29
 816:	c8 2f       	mov	r28, r24
 818:	8b 01       	movw	r16, r22
 81a:	d4 2f       	mov	r29, r20
 81c:	80 e0       	ldi	r24, 0x00	; 0
 81e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 822:	cf 71       	andi	r28, 0x1F	; 31
 824:	c0 62       	ori	r28, 0x20	; 32
 826:	ce bd       	out	0x2e, r28	; 46
 828:	0d b4       	in	r0, 0x2d	; 45
 82a:	07 fe       	sbrs	r0, 7
 82c:	fd cf       	rjmp	.-6      	; 0x828 <nrf24_writeRegister+0x1a>
 82e:	8e b5       	in	r24, 0x2e	; 46
 830:	6d 2f       	mov	r22, r29
 832:	c8 01       	movw	r24, r16
 834:	0e 94 e7 04 	call	0x9ce	; 0x9ce <nrf24_transmitSync>
 838:	81 e0       	ldi	r24, 0x01	; 1
 83a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 83e:	df 91       	pop	r29
 840:	cf 91       	pop	r28
 842:	1f 91       	pop	r17
 844:	0f 91       	pop	r16
 846:	08 95       	ret

Disassembly of section .text.nrf24_rx_address:

000009ac <nrf24_rx_address>:
 9ac:	cf 93       	push	r28
 9ae:	df 93       	push	r29
 9b0:	ec 01       	movw	r28, r24
 9b2:	80 e0       	ldi	r24, 0x00	; 0
 9b4:	0e 94 13 05 	call	0xa26	; 0xa26 <nrf24_ce_digitalWrite>
 9b8:	45 e0       	ldi	r20, 0x05	; 5
 9ba:	be 01       	movw	r22, r28
 9bc:	8b e0       	ldi	r24, 0x0B	; 11
 9be:	0e 94 07 04 	call	0x80e	; 0x80e <nrf24_writeRegister>
 9c2:	81 e0       	ldi	r24, 0x01	; 1
 9c4:	0e 94 13 05 	call	0xa26	; 0xa26 <nrf24_ce_digitalWrite>
 9c8:	df 91       	pop	r29
 9ca:	cf 91       	pop	r28
 9cc:	08 95       	ret

Disassembly of section .text.nrf24_tx_address:

000009ee <nrf24_tx_address>:
	return payload_len;
}

/* Set the TX address */
void nrf24_tx_address(uint8_t* adr)
{
 9ee:	cf 93       	push	r28
 9f0:	df 93       	push	r29
 9f2:	ec 01       	movw	r28, r24
	/* RX_ADDR_P0 must be set to the sending addr for auto ack to work. */
	nrf24_writeRegister(RX_ADDR_P0,adr,nrf24_ADDR_LEN);
 9f4:	45 e0       	ldi	r20, 0x05	; 5
 9f6:	bc 01       	movw	r22, r24
 9f8:	8a e0       	ldi	r24, 0x0A	; 10
 9fa:	0e 94 07 04 	call	0x80e	; 0x80e <nrf24_writeRegister>
	nrf24_writeRegister(TX_ADDR,adr,nrf24_ADDR_LEN);
 9fe:	45 e0       	ldi	r20, 0x05	; 5
 a00:	be 01       	movw	r22, r28
 a02:	80 e1       	ldi	r24, 0x10	; 16
 a04:	0e 94 07 04 	call	0x80e	; 0x80e <nrf24_writeRegister>
}
 a08:	df 91       	pop	r29
 a0a:	cf 91       	pop	r28
 a0c:	08 95       	ret

Disassembly of section .text.nrf24_init:

00000954 <nrf24_init>:
	for(i=0;i<len;i++)
	{
		datain[i] = spi_exchange(dataout[i]);
	}

}
 954:	84 b1       	in	r24, 0x04	; 4
 956:	85 60       	ori	r24, 0x05	; 5
 958:	84 b9       	out	0x04, r24	; 4
 95a:	86 e0       	ldi	r24, 0x06	; 6
 95c:	91 e0       	ldi	r25, 0x01	; 1
 95e:	0e 94 f7 04 	call	0x9ee	; 0x9ee <nrf24_tx_address>
 962:	81 e0       	ldi	r24, 0x01	; 1
 964:	91 e0       	ldi	r25, 0x01	; 1
 966:	0e 94 d6 04 	call	0x9ac	; 0x9ac <nrf24_rx_address>
 96a:	80 e0       	ldi	r24, 0x00	; 0
 96c:	0e 94 13 05 	call	0xa26	; 0xa26 <nrf24_ce_digitalWrite>
 970:	81 e0       	ldi	r24, 0x01	; 1
 972:	0e 94 1d 05 	call	0xa3a	; 0xa3a <nrf24_csn_digitalWrite>
 976:	67 e0       	ldi	r22, 0x07	; 7
 978:	82 e0       	ldi	r24, 0x02	; 2
 97a:	0e 94 82 03 	call	0x704	; 0x704 <nrf24_config>
 97e:	08 95       	ret

Disassembly of section .text.uart_init:

00000a0e <uart_init>:
#include "uart.h"

void uart_init()
{
	// Set Baud Rate
	UBRR0H = BAUD_PRESCALER >> 8;
 a0e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = BAUD_PRESCALER;
 a12:	87 e6       	ldi	r24, 0x67	; 103
 a14:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Set Frame Format
	UCSR0C = ASYNCHRONOUS | PARITY_MODE | STOP_BIT | DATA_BIT;
 a18:	86 e0       	ldi	r24, 0x06	; 6
 a1a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Enable Receiver and Transmitter
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
 a1e:	88 e1       	ldi	r24, 0x18	; 24
 a20:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 a24:	08 95       	ret

Disassembly of section .text.uart_putc:

00000a60 <uart_putc>:
}

void uart_putc(uint8_t DataByte)
{
	while (( UCSR0A & (1<<UDRE0)) == 0) {}; // Do nothing until UDR is ready
 a60:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 a64:	95 ff       	sbrs	r25, 5
 a66:	fc cf       	rjmp	.-8      	; 0xa60 <uart_putc>
	UDR0 = DataByte;
 a68:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 a6c:	08 95       	ret

Disassembly of section .text.uart_puts:

00000980 <uart_puts>:
}

void uart_puts(const char *s )
{
 980:	cf 92       	push	r12
 982:	df 92       	push	r13
 984:	ef 92       	push	r14
 986:	6b 01       	movw	r12, r22
 988:	e8 2e       	mov	r14, r24
	while (*s)
 98a:	06 c0       	rjmp	.+12     	; 0x998 <uart_puts+0x18>
	uart_putc(*s++);
 98c:	9f ef       	ldi	r25, 0xFF	; 255
 98e:	c9 1a       	sub	r12, r25
 990:	d9 0a       	sbc	r13, r25
 992:	e9 0a       	sbc	r14, r25
 994:	0e 94 30 05 	call	0xa60	; 0xa60 <uart_putc>
	UDR0 = DataByte;
}

void uart_puts(const char *s )
{
	while (*s)
 998:	f6 01       	movw	r30, r12
 99a:	84 91       	lpm	r24, Z
 99c:	e7 fc       	sbrc	r14, 7
 99e:	80 81       	ld	r24, Z
 9a0:	81 11       	cpse	r24, r1
 9a2:	f4 cf       	rjmp	.-24     	; 0x98c <uart_puts+0xc>
	uart_putc(*s++);

	}/* uart_puts */
 9a4:	ef 90       	pop	r14
 9a6:	df 90       	pop	r13
 9a8:	cf 90       	pop	r12
 9aa:	08 95       	ret

Disassembly of section .text.avrlibc:

000007c8 <sprintf>:
 7c8:	af e0       	ldi	r26, 0x0F	; 15
 7ca:	b0 e0       	ldi	r27, 0x00	; 0
 7cc:	ea ee       	ldi	r30, 0xEA	; 234
 7ce:	f3 e0       	ldi	r31, 0x03	; 3
 7d0:	0c 94 32 04 	jmp	0x864	; 0x864 <__prologue_saves__+0x1c>
 7d4:	0e 89       	ldd	r16, Y+22	; 0x16
 7d6:	1f 89       	ldd	r17, Y+23	; 0x17
 7d8:	86 e0       	ldi	r24, 0x06	; 6
 7da:	8d 83       	std	Y+5, r24	; 0x05
 7dc:	1a 83       	std	Y+2, r17	; 0x02
 7de:	09 83       	std	Y+1, r16	; 0x01
 7e0:	8f ef       	ldi	r24, 0xFF	; 255
 7e2:	9f e7       	ldi	r25, 0x7F	; 127
 7e4:	9f 83       	std	Y+7, r25	; 0x07
 7e6:	8e 83       	std	Y+6, r24	; 0x06
 7e8:	9e 01       	movw	r18, r28
 7ea:	25 5e       	subi	r18, 0xE5	; 229
 7ec:	3f 4f       	sbci	r19, 0xFF	; 255
 7ee:	48 8d       	ldd	r20, Y+24	; 0x18
 7f0:	59 8d       	ldd	r21, Y+25	; 0x19
 7f2:	6a 8d       	ldd	r22, Y+26	; 0x1a
 7f4:	ce 01       	movw	r24, r28
 7f6:	01 96       	adiw	r24, 0x01	; 1
 7f8:	0e 94 6c 00 	call	0xd8	; 0xd8 <vfprintf>
 7fc:	e8 85       	ldd	r30, Y+8	; 0x08
 7fe:	f9 85       	ldd	r31, Y+9	; 0x09
 800:	e0 0f       	add	r30, r16
 802:	f1 1f       	adc	r31, r17
 804:	10 82       	st	Z, r1
 806:	2f 96       	adiw	r28, 0x0f	; 15
 808:	e4 e0       	ldi	r30, 0x04	; 4
 80a:	0c 94 84 04 	jmp	0x908	; 0x908 <__stack+0x9>

Disassembly of section .text.avrlibc:

000000d8 <vfprintf>:
  d8:	2f 92       	push	r2
  da:	3f 92       	push	r3
  dc:	4f 92       	push	r4
  de:	6f 92       	push	r6
  e0:	7f 92       	push	r7
  e2:	8f 92       	push	r8
  e4:	9f 92       	push	r9
  e6:	af 92       	push	r10
  e8:	bf 92       	push	r11
  ea:	cf 92       	push	r12
  ec:	df 92       	push	r13
  ee:	ef 92       	push	r14
  f0:	ff 92       	push	r15
  f2:	0f 93       	push	r16
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	62 97       	sbiw	r28, 0x12	; 18
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	f8 94       	cli
 104:	de bf       	out	0x3e, r29	; 62
 106:	0f be       	out	0x3f, r0	; 63
 108:	cd bf       	out	0x3d, r28	; 61
 10a:	6c 01       	movw	r12, r24
 10c:	3a 01       	movw	r6, r20
 10e:	86 2e       	mov	r8, r22
 110:	79 01       	movw	r14, r18
 112:	fc 01       	movw	r30, r24
 114:	10 86       	std	Z+8, r1	; 0x08
 116:	17 82       	std	Z+7, r1	; 0x07
 118:	84 81       	ldd	r24, Z+4	; 0x04
 11a:	81 ff       	sbrs	r24, 1
 11c:	e7 c1       	rjmp	.+974    	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 11e:	9e 01       	movw	r18, r28
 120:	2f 5f       	subi	r18, 0xFF	; 255
 122:	3f 4f       	sbci	r19, 0xFF	; 255
 124:	3d 87       	std	Y+13, r19	; 0x0d
 126:	2c 87       	std	Y+12, r18	; 0x0c
 128:	c9 01       	movw	r24, r18
 12a:	a0 e8       	ldi	r26, 0x80	; 128
 12c:	88 8b       	std	Y+16, r24	; 0x10
 12e:	99 8b       	std	Y+17, r25	; 0x11
 130:	aa 8b       	std	Y+18, r26	; 0x12
 132:	9f e3       	ldi	r25, 0x3F	; 63
 134:	99 2e       	mov	r9, r25
 136:	f3 01       	movw	r30, r6
 138:	84 91       	lpm	r24, Z
 13a:	87 fc       	sbrc	r8, 7
 13c:	80 81       	ld	r24, Z
 13e:	88 23       	and	r24, r24
 140:	09 f4       	brne	.+2      	; 0x144 <vfprintf+0x6c>
 142:	d0 c1       	rjmp	.+928    	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 144:	48 2d       	mov	r20, r8
 146:	93 01       	movw	r18, r6
 148:	2f 5f       	subi	r18, 0xFF	; 255
 14a:	3f 4f       	sbci	r19, 0xFF	; 255
 14c:	4f 4f       	sbci	r20, 0xFF	; 255
 14e:	85 32       	cpi	r24, 0x25	; 37
 150:	19 f0       	breq	.+6      	; 0x158 <vfprintf+0x80>
 152:	39 01       	movw	r6, r18
 154:	84 2e       	mov	r8, r20
 156:	0a c0       	rjmp	.+20     	; 0x16c <vfprintf+0x94>
 158:	f9 01       	movw	r30, r18
 15a:	84 91       	lpm	r24, Z
 15c:	47 fd       	sbrc	r20, 7
 15e:	80 81       	ld	r24, Z
 160:	92 e0       	ldi	r25, 0x02	; 2
 162:	69 0e       	add	r6, r25
 164:	71 1c       	adc	r7, r1
 166:	81 1c       	adc	r8, r1
 168:	85 32       	cpi	r24, 0x25	; 37
 16a:	29 f4       	brne	.+10     	; 0x176 <vfprintf+0x9e>
 16c:	b6 01       	movw	r22, r12
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 174:	e0 cf       	rjmp	.-64     	; 0x136 <vfprintf+0x5e>
 176:	b1 2c       	mov	r11, r1
 178:	00 e0       	ldi	r16, 0x00	; 0
 17a:	10 e0       	ldi	r17, 0x00	; 0
 17c:	10 32       	cpi	r17, 0x20	; 32
 17e:	a0 f4       	brcc	.+40     	; 0x1a8 <vfprintf+0xd0>
 180:	8b 32       	cpi	r24, 0x2B	; 43
 182:	69 f0       	breq	.+26     	; 0x19e <vfprintf+0xc6>
 184:	30 f4       	brcc	.+12     	; 0x192 <vfprintf+0xba>
 186:	80 32       	cpi	r24, 0x20	; 32
 188:	59 f0       	breq	.+22     	; 0x1a0 <vfprintf+0xc8>
 18a:	83 32       	cpi	r24, 0x23	; 35
 18c:	69 f4       	brne	.+26     	; 0x1a8 <vfprintf+0xd0>
 18e:	10 61       	ori	r17, 0x10	; 16
 190:	2c c0       	rjmp	.+88     	; 0x1ea <vfprintf+0x112>
 192:	8d 32       	cpi	r24, 0x2D	; 45
 194:	39 f0       	breq	.+14     	; 0x1a4 <vfprintf+0xcc>
 196:	80 33       	cpi	r24, 0x30	; 48
 198:	39 f4       	brne	.+14     	; 0x1a8 <vfprintf+0xd0>
 19a:	11 60       	ori	r17, 0x01	; 1
 19c:	26 c0       	rjmp	.+76     	; 0x1ea <vfprintf+0x112>
 19e:	12 60       	ori	r17, 0x02	; 2
 1a0:	14 60       	ori	r17, 0x04	; 4
 1a2:	23 c0       	rjmp	.+70     	; 0x1ea <vfprintf+0x112>
 1a4:	18 60       	ori	r17, 0x08	; 8
 1a6:	21 c0       	rjmp	.+66     	; 0x1ea <vfprintf+0x112>
 1a8:	17 fd       	sbrc	r17, 7
 1aa:	29 c0       	rjmp	.+82     	; 0x1fe <vfprintf+0x126>
 1ac:	90 ed       	ldi	r25, 0xD0	; 208
 1ae:	98 0f       	add	r25, r24
 1b0:	9a 30       	cpi	r25, 0x0A	; 10
 1b2:	78 f4       	brcc	.+30     	; 0x1d2 <vfprintf+0xfa>
 1b4:	16 ff       	sbrs	r17, 6
 1b6:	06 c0       	rjmp	.+12     	; 0x1c4 <vfprintf+0xec>
 1b8:	aa e0       	ldi	r26, 0x0A	; 10
 1ba:	ba 9e       	mul	r11, r26
 1bc:	90 0d       	add	r25, r0
 1be:	11 24       	eor	r1, r1
 1c0:	b9 2e       	mov	r11, r25
 1c2:	13 c0       	rjmp	.+38     	; 0x1ea <vfprintf+0x112>
 1c4:	ea e0       	ldi	r30, 0x0A	; 10
 1c6:	0e 9f       	mul	r16, r30
 1c8:	90 0d       	add	r25, r0
 1ca:	11 24       	eor	r1, r1
 1cc:	09 2f       	mov	r16, r25
 1ce:	10 62       	ori	r17, 0x20	; 32
 1d0:	0c c0       	rjmp	.+24     	; 0x1ea <vfprintf+0x112>
 1d2:	8e 32       	cpi	r24, 0x2E	; 46
 1d4:	21 f4       	brne	.+8      	; 0x1de <vfprintf+0x106>
 1d6:	16 fd       	sbrc	r17, 6
 1d8:	85 c1       	rjmp	.+778    	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 1da:	10 64       	ori	r17, 0x40	; 64
 1dc:	06 c0       	rjmp	.+12     	; 0x1ea <vfprintf+0x112>
 1de:	8c 36       	cpi	r24, 0x6C	; 108
 1e0:	11 f4       	brne	.+4      	; 0x1e6 <vfprintf+0x10e>
 1e2:	10 68       	ori	r17, 0x80	; 128
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <vfprintf+0x112>
 1e6:	88 36       	cpi	r24, 0x68	; 104
 1e8:	51 f4       	brne	.+20     	; 0x1fe <vfprintf+0x126>
 1ea:	f3 01       	movw	r30, r6
 1ec:	84 91       	lpm	r24, Z
 1ee:	87 fc       	sbrc	r8, 7
 1f0:	80 81       	ld	r24, Z
 1f2:	ff ef       	ldi	r31, 0xFF	; 255
 1f4:	6f 1a       	sub	r6, r31
 1f6:	7f 0a       	sbc	r7, r31
 1f8:	8f 0a       	sbc	r8, r31
 1fa:	81 11       	cpse	r24, r1
 1fc:	bf cf       	rjmp	.-130    	; 0x17c <vfprintf+0xa4>
 1fe:	98 2f       	mov	r25, r24
 200:	9f 7d       	andi	r25, 0xDF	; 223
 202:	95 54       	subi	r25, 0x45	; 69
 204:	93 30       	cpi	r25, 0x03	; 3
 206:	28 f4       	brcc	.+10     	; 0x212 <vfprintf+0x13a>
 208:	24 e0       	ldi	r18, 0x04	; 4
 20a:	e2 0e       	add	r14, r18
 20c:	f1 1c       	adc	r15, r1
 20e:	99 82       	std	Y+1, r9	; 0x01
 210:	0f c0       	rjmp	.+30     	; 0x230 <vfprintf+0x158>
 212:	83 36       	cpi	r24, 0x63	; 99
 214:	31 f0       	breq	.+12     	; 0x222 <vfprintf+0x14a>
 216:	83 37       	cpi	r24, 0x73	; 115
 218:	91 f0       	breq	.+36     	; 0x23e <vfprintf+0x166>
 21a:	83 35       	cpi	r24, 0x53	; 83
 21c:	09 f0       	breq	.+2      	; 0x220 <vfprintf+0x148>
 21e:	63 c0       	rjmp	.+198    	; 0x2e6 <vfprintf+0x20e>
 220:	27 c0       	rjmp	.+78     	; 0x270 <vfprintf+0x198>
 222:	f7 01       	movw	r30, r14
 224:	80 81       	ld	r24, Z
 226:	89 83       	std	Y+1, r24	; 0x01
 228:	97 01       	movw	r18, r14
 22a:	2e 5f       	subi	r18, 0xFE	; 254
 22c:	3f 4f       	sbci	r19, 0xFF	; 255
 22e:	79 01       	movw	r14, r18
 230:	28 88       	ldd	r2, Y+16	; 0x10
 232:	39 88       	ldd	r3, Y+17	; 0x11
 234:	4a 88       	ldd	r4, Y+18	; 0x12
 236:	aa 24       	eor	r10, r10
 238:	a3 94       	inc	r10
 23a:	b1 2c       	mov	r11, r1
 23c:	17 c0       	rjmp	.+46     	; 0x26c <vfprintf+0x194>
 23e:	a7 01       	movw	r20, r14
 240:	4d 5f       	subi	r20, 0xFD	; 253
 242:	5f 4f       	sbci	r21, 0xFF	; 255
 244:	5f 87       	std	Y+15, r21	; 0x0f
 246:	4e 87       	std	Y+14, r20	; 0x0e
 248:	f7 01       	movw	r30, r14
 24a:	20 80       	ld	r2, Z
 24c:	31 80       	ldd	r3, Z+1	; 0x01
 24e:	42 80       	ldd	r4, Z+2	; 0x02
 250:	16 ff       	sbrs	r17, 6
 252:	03 c0       	rjmp	.+6      	; 0x25a <vfprintf+0x182>
 254:	4b 2d       	mov	r20, r11
 256:	50 e0       	ldi	r21, 0x00	; 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <vfprintf+0x186>
 25a:	4f ef       	ldi	r20, 0xFF	; 255
 25c:	5f ef       	ldi	r21, 0xFF	; 255
 25e:	84 2d       	mov	r24, r4
 260:	b1 01       	movw	r22, r2
 262:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <strnlen>
 266:	5c 01       	movw	r10, r24
 268:	ee 84       	ldd	r14, Y+14	; 0x0e
 26a:	ff 84       	ldd	r15, Y+15	; 0x0f
 26c:	1f 77       	andi	r17, 0x7F	; 127
 26e:	18 c0       	rjmp	.+48     	; 0x2a0 <vfprintf+0x1c8>
 270:	97 01       	movw	r18, r14
 272:	2d 5f       	subi	r18, 0xFD	; 253
 274:	3f 4f       	sbci	r19, 0xFF	; 255
 276:	3f 87       	std	Y+15, r19	; 0x0f
 278:	2e 87       	std	Y+14, r18	; 0x0e
 27a:	f7 01       	movw	r30, r14
 27c:	20 80       	ld	r2, Z
 27e:	31 80       	ldd	r3, Z+1	; 0x01
 280:	42 80       	ldd	r4, Z+2	; 0x02
 282:	16 ff       	sbrs	r17, 6
 284:	03 c0       	rjmp	.+6      	; 0x28c <vfprintf+0x1b4>
 286:	4b 2d       	mov	r20, r11
 288:	50 e0       	ldi	r21, 0x00	; 0
 28a:	02 c0       	rjmp	.+4      	; 0x290 <vfprintf+0x1b8>
 28c:	4f ef       	ldi	r20, 0xFF	; 255
 28e:	5f ef       	ldi	r21, 0xFF	; 255
 290:	84 2d       	mov	r24, r4
 292:	b1 01       	movw	r22, r2
 294:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <strnlen>
 298:	5c 01       	movw	r10, r24
 29a:	10 68       	ori	r17, 0x80	; 128
 29c:	ee 84       	ldd	r14, Y+14	; 0x0e
 29e:	ff 84       	ldd	r15, Y+15	; 0x0f
 2a0:	13 fd       	sbrc	r17, 3
 2a2:	1d c0       	rjmp	.+58     	; 0x2de <vfprintf+0x206>
 2a4:	80 2f       	mov	r24, r16
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	a8 16       	cp	r10, r24
 2aa:	b9 06       	cpc	r11, r25
 2ac:	c0 f4       	brcc	.+48     	; 0x2de <vfprintf+0x206>
 2ae:	b6 01       	movw	r22, r12
 2b0:	80 e2       	ldi	r24, 0x20	; 32
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 2b8:	01 50       	subi	r16, 0x01	; 1
 2ba:	f4 cf       	rjmp	.-24     	; 0x2a4 <vfprintf+0x1cc>
 2bc:	f1 01       	movw	r30, r2
 2be:	84 91       	lpm	r24, Z
 2c0:	47 fc       	sbrc	r4, 7
 2c2:	80 81       	ld	r24, Z
 2c4:	ff ef       	ldi	r31, 0xFF	; 255
 2c6:	2f 1a       	sub	r2, r31
 2c8:	3f 0a       	sbc	r3, r31
 2ca:	4f 0a       	sbc	r4, r31
 2cc:	b6 01       	movw	r22, r12
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 2d4:	01 11       	cpse	r16, r1
 2d6:	01 50       	subi	r16, 0x01	; 1
 2d8:	21 e0       	ldi	r18, 0x01	; 1
 2da:	a2 1a       	sub	r10, r18
 2dc:	b1 08       	sbc	r11, r1
 2de:	a1 14       	cp	r10, r1
 2e0:	b1 04       	cpc	r11, r1
 2e2:	61 f7       	brne	.-40     	; 0x2bc <vfprintf+0x1e4>
 2e4:	f5 c0       	rjmp	.+490    	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 2e6:	84 36       	cpi	r24, 0x64	; 100
 2e8:	11 f0       	breq	.+4      	; 0x2ee <vfprintf+0x216>
 2ea:	89 36       	cpi	r24, 0x69	; 105
 2ec:	71 f5       	brne	.+92     	; 0x34a <vfprintf+0x272>
 2ee:	f7 01       	movw	r30, r14
 2f0:	17 ff       	sbrs	r17, 7
 2f2:	08 c0       	rjmp	.+16     	; 0x304 <vfprintf+0x22c>
 2f4:	60 81       	ld	r22, Z
 2f6:	71 81       	ldd	r23, Z+1	; 0x01
 2f8:	82 81       	ldd	r24, Z+2	; 0x02
 2fa:	93 81       	ldd	r25, Z+3	; 0x03
 2fc:	97 01       	movw	r18, r14
 2fe:	2c 5f       	subi	r18, 0xFC	; 252
 300:	3f 4f       	sbci	r19, 0xFF	; 255
 302:	09 c0       	rjmp	.+18     	; 0x316 <vfprintf+0x23e>
 304:	60 81       	ld	r22, Z
 306:	71 81       	ldd	r23, Z+1	; 0x01
 308:	07 2e       	mov	r0, r23
 30a:	00 0c       	add	r0, r0
 30c:	88 0b       	sbc	r24, r24
 30e:	99 0b       	sbc	r25, r25
 310:	97 01       	movw	r18, r14
 312:	2e 5f       	subi	r18, 0xFE	; 254
 314:	3f 4f       	sbci	r19, 0xFF	; 255
 316:	79 01       	movw	r14, r18
 318:	1f 76       	andi	r17, 0x6F	; 111
 31a:	31 2e       	mov	r3, r17
 31c:	97 ff       	sbrs	r25, 7
 31e:	0a c0       	rjmp	.+20     	; 0x334 <vfprintf+0x25c>
 320:	90 95       	com	r25
 322:	80 95       	com	r24
 324:	70 95       	com	r23
 326:	61 95       	neg	r22
 328:	7f 4f       	sbci	r23, 0xFF	; 255
 32a:	8f 4f       	sbci	r24, 0xFF	; 255
 32c:	9f 4f       	sbci	r25, 0xFF	; 255
 32e:	31 2f       	mov	r19, r17
 330:	30 68       	ori	r19, 0x80	; 128
 332:	33 2e       	mov	r3, r19
 334:	2a e0       	ldi	r18, 0x0A	; 10
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	ae 01       	movw	r20, r28
 33a:	4f 5f       	subi	r20, 0xFF	; 255
 33c:	5f 4f       	sbci	r21, 0xFF	; 255
 33e:	0e 94 90 02 	call	0x520	; 0x520 <__ultoa_invert>
 342:	48 2e       	mov	r4, r24
 344:	4c 85       	ldd	r20, Y+12	; 0x0c
 346:	44 1a       	sub	r4, r20
 348:	4a c0       	rjmp	.+148    	; 0x3de <vfprintf+0x306>
 34a:	85 37       	cpi	r24, 0x75	; 117
 34c:	29 f4       	brne	.+10     	; 0x358 <vfprintf+0x280>
 34e:	1f 7e       	andi	r17, 0xEF	; 239
 350:	a1 2e       	mov	r10, r17
 352:	2a e0       	ldi	r18, 0x0A	; 10
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	25 c0       	rjmp	.+74     	; 0x3a2 <vfprintf+0x2ca>
 358:	51 2f       	mov	r21, r17
 35a:	59 7f       	andi	r21, 0xF9	; 249
 35c:	a5 2e       	mov	r10, r21
 35e:	8f 36       	cpi	r24, 0x6F	; 111
 360:	c1 f0       	breq	.+48     	; 0x392 <vfprintf+0x2ba>
 362:	18 f4       	brcc	.+6      	; 0x36a <vfprintf+0x292>
 364:	88 35       	cpi	r24, 0x58	; 88
 366:	79 f0       	breq	.+30     	; 0x386 <vfprintf+0x2ae>
 368:	bd c0       	rjmp	.+378    	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 36a:	80 37       	cpi	r24, 0x70	; 112
 36c:	19 f0       	breq	.+6      	; 0x374 <vfprintf+0x29c>
 36e:	88 37       	cpi	r24, 0x78	; 120
 370:	21 f0       	breq	.+8      	; 0x37a <vfprintf+0x2a2>
 372:	b8 c0       	rjmp	.+368    	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 374:	85 2f       	mov	r24, r21
 376:	80 61       	ori	r24, 0x10	; 16
 378:	a8 2e       	mov	r10, r24
 37a:	a4 fe       	sbrs	r10, 4
 37c:	0d c0       	rjmp	.+26     	; 0x398 <vfprintf+0x2c0>
 37e:	9a 2d       	mov	r25, r10
 380:	94 60       	ori	r25, 0x04	; 4
 382:	a9 2e       	mov	r10, r25
 384:	09 c0       	rjmp	.+18     	; 0x398 <vfprintf+0x2c0>
 386:	14 ff       	sbrs	r17, 4
 388:	0a c0       	rjmp	.+20     	; 0x39e <vfprintf+0x2c6>
 38a:	a5 2f       	mov	r26, r21
 38c:	a6 60       	ori	r26, 0x06	; 6
 38e:	aa 2e       	mov	r10, r26
 390:	06 c0       	rjmp	.+12     	; 0x39e <vfprintf+0x2c6>
 392:	28 e0       	ldi	r18, 0x08	; 8
 394:	30 e0       	ldi	r19, 0x00	; 0
 396:	05 c0       	rjmp	.+10     	; 0x3a2 <vfprintf+0x2ca>
 398:	20 e1       	ldi	r18, 0x10	; 16
 39a:	30 e0       	ldi	r19, 0x00	; 0
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <vfprintf+0x2ca>
 39e:	20 e1       	ldi	r18, 0x10	; 16
 3a0:	32 e0       	ldi	r19, 0x02	; 2
 3a2:	f7 01       	movw	r30, r14
 3a4:	a7 fe       	sbrs	r10, 7
 3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <vfprintf+0x2e0>
 3a8:	60 81       	ld	r22, Z
 3aa:	71 81       	ldd	r23, Z+1	; 0x01
 3ac:	82 81       	ldd	r24, Z+2	; 0x02
 3ae:	93 81       	ldd	r25, Z+3	; 0x03
 3b0:	a7 01       	movw	r20, r14
 3b2:	4c 5f       	subi	r20, 0xFC	; 252
 3b4:	5f 4f       	sbci	r21, 0xFF	; 255
 3b6:	07 c0       	rjmp	.+14     	; 0x3c6 <vfprintf+0x2ee>
 3b8:	60 81       	ld	r22, Z
 3ba:	71 81       	ldd	r23, Z+1	; 0x01
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	a7 01       	movw	r20, r14
 3c2:	4e 5f       	subi	r20, 0xFE	; 254
 3c4:	5f 4f       	sbci	r21, 0xFF	; 255
 3c6:	7a 01       	movw	r14, r20
 3c8:	ae 01       	movw	r20, r28
 3ca:	4f 5f       	subi	r20, 0xFF	; 255
 3cc:	5f 4f       	sbci	r21, 0xFF	; 255
 3ce:	0e 94 90 02 	call	0x520	; 0x520 <__ultoa_invert>
 3d2:	48 2e       	mov	r4, r24
 3d4:	5c 85       	ldd	r21, Y+12	; 0x0c
 3d6:	45 1a       	sub	r4, r21
 3d8:	8a 2d       	mov	r24, r10
 3da:	8f 77       	andi	r24, 0x7F	; 127
 3dc:	38 2e       	mov	r3, r24
 3de:	36 fe       	sbrs	r3, 6
 3e0:	0d c0       	rjmp	.+26     	; 0x3fc <vfprintf+0x324>
 3e2:	93 2d       	mov	r25, r3
 3e4:	9e 7f       	andi	r25, 0xFE	; 254
 3e6:	a9 2e       	mov	r10, r25
 3e8:	4b 14       	cp	r4, r11
 3ea:	58 f4       	brcc	.+22     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3ec:	34 fe       	sbrs	r3, 4
 3ee:	0b c0       	rjmp	.+22     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f0:	32 fc       	sbrc	r3, 2
 3f2:	09 c0       	rjmp	.+18     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f4:	a3 2d       	mov	r26, r3
 3f6:	ae 7e       	andi	r26, 0xEE	; 238
 3f8:	aa 2e       	mov	r10, r26
 3fa:	05 c0       	rjmp	.+10     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fc:	14 2d       	mov	r17, r4
 3fe:	a3 2c       	mov	r10, r3
 400:	03 c0       	rjmp	.+6      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 402:	14 2d       	mov	r17, r4
 404:	01 c0       	rjmp	.+2      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 406:	1b 2d       	mov	r17, r11
 408:	a4 fe       	sbrs	r10, 4
 40a:	0e c0       	rjmp	.+28     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 40c:	fe 01       	movw	r30, r28
 40e:	e4 0d       	add	r30, r4
 410:	f1 1d       	adc	r31, r1
 412:	80 81       	ld	r24, Z
 414:	80 33       	cpi	r24, 0x30	; 48
 416:	21 f4       	brne	.+8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 418:	ea 2d       	mov	r30, r10
 41a:	e9 7e       	andi	r30, 0xE9	; 233
 41c:	ae 2e       	mov	r10, r30
 41e:	08 c0       	rjmp	.+16     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 420:	a2 fe       	sbrs	r10, 2
 422:	05 c0       	rjmp	.+10     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 424:	1e 5f       	subi	r17, 0xFE	; 254
 426:	04 c0       	rjmp	.+8      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 428:	8a 2d       	mov	r24, r10
 42a:	86 78       	andi	r24, 0x86	; 134
 42c:	09 f0       	breq	.+2      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 42e:	1f 5f       	subi	r17, 0xFF	; 255
 430:	a3 fc       	sbrc	r10, 3
 432:	11 c0       	rjmp	.+34     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 434:	a0 fe       	sbrs	r10, 0
 436:	06 c0       	rjmp	.+12     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 438:	10 17       	cp	r17, r16
 43a:	88 f4       	brcc	.+34     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 43c:	04 0d       	add	r16, r4
 43e:	b0 2e       	mov	r11, r16
 440:	b1 1a       	sub	r11, r17
 442:	0e c0       	rjmp	.+28     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 444:	10 17       	cp	r17, r16
 446:	60 f4       	brcc	.+24     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 448:	b6 01       	movw	r22, r12
 44a:	80 e2       	ldi	r24, 0x20	; 32
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 452:	1f 5f       	subi	r17, 0xFF	; 255
 454:	f7 cf       	rjmp	.-18     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 456:	10 17       	cp	r17, r16
 458:	18 f4       	brcc	.+6      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 45a:	01 1b       	sub	r16, r17
 45c:	02 c0       	rjmp	.+4      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 45e:	b4 2c       	mov	r11, r4
 460:	00 e0       	ldi	r16, 0x00	; 0
 462:	a4 fe       	sbrs	r10, 4
 464:	10 c0       	rjmp	.+32     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 466:	b6 01       	movw	r22, r12
 468:	80 e3       	ldi	r24, 0x30	; 48
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 470:	a2 fe       	sbrs	r10, 2
 472:	17 c0       	rjmp	.+46     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 474:	a1 fc       	sbrc	r10, 1
 476:	03 c0       	rjmp	.+6      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 478:	88 e7       	ldi	r24, 0x78	; 120
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	02 c0       	rjmp	.+4      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 47e:	88 e5       	ldi	r24, 0x58	; 88
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	b6 01       	movw	r22, r12
 484:	0c c0       	rjmp	.+24     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 486:	8a 2d       	mov	r24, r10
 488:	86 78       	andi	r24, 0x86	; 134
 48a:	59 f0       	breq	.+22     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 48c:	a1 fe       	sbrs	r10, 1
 48e:	02 c0       	rjmp	.+4      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 490:	8b e2       	ldi	r24, 0x2B	; 43
 492:	01 c0       	rjmp	.+2      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 494:	80 e2       	ldi	r24, 0x20	; 32
 496:	a7 fc       	sbrc	r10, 7
 498:	8d e2       	ldi	r24, 0x2D	; 45
 49a:	b6 01       	movw	r22, r12
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 4a2:	4b 14       	cp	r4, r11
 4a4:	38 f4       	brcc	.+14     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 4a6:	b6 01       	movw	r22, r12
 4a8:	80 e3       	ldi	r24, 0x30	; 48
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 4b0:	ba 94       	dec	r11
 4b2:	f7 cf       	rjmp	.-18     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 4b4:	4a 94       	dec	r4
 4b6:	e1 e0       	ldi	r30, 0x01	; 1
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	ec 0f       	add	r30, r28
 4bc:	fd 1f       	adc	r31, r29
 4be:	e4 0d       	add	r30, r4
 4c0:	f1 1d       	adc	r31, r1
 4c2:	80 81       	ld	r24, Z
 4c4:	b6 01       	movw	r22, r12
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 4cc:	41 10       	cpse	r4, r1
 4ce:	f2 cf       	rjmp	.-28     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 4d0:	00 23       	and	r16, r16
 4d2:	09 f4       	brne	.+2      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4d4:	30 ce       	rjmp	.-928    	; 0x136 <vfprintf+0x5e>
 4d6:	b6 01       	movw	r22, r12
 4d8:	80 e2       	ldi	r24, 0x20	; 32
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 94 46 03 	call	0x68c	; 0x68c <fputc>
 4e0:	01 50       	subi	r16, 0x01	; 1
 4e2:	f6 cf       	rjmp	.-20     	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 4e4:	f6 01       	movw	r30, r12
 4e6:	87 81       	ldd	r24, Z+7	; 0x07
 4e8:	90 85       	ldd	r25, Z+8	; 0x08
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4ec:	8f ef       	ldi	r24, 0xFF	; 255
 4ee:	9f ef       	ldi	r25, 0xFF	; 255
 4f0:	62 96       	adiw	r28, 0x12	; 18
 4f2:	0f b6       	in	r0, 0x3f	; 63
 4f4:	f8 94       	cli
 4f6:	de bf       	out	0x3e, r29	; 62
 4f8:	0f be       	out	0x3f, r0	; 63
 4fa:	cd bf       	out	0x3d, r28	; 61
 4fc:	df 91       	pop	r29
 4fe:	cf 91       	pop	r28
 500:	1f 91       	pop	r17
 502:	0f 91       	pop	r16
 504:	ff 90       	pop	r15
 506:	ef 90       	pop	r14
 508:	df 90       	pop	r13
 50a:	cf 90       	pop	r12
 50c:	bf 90       	pop	r11
 50e:	af 90       	pop	r10
 510:	9f 90       	pop	r9
 512:	8f 90       	pop	r8
 514:	7f 90       	pop	r7
 516:	6f 90       	pop	r6
 518:	4f 90       	pop	r4
 51a:	3f 90       	pop	r3
 51c:	2f 90       	pop	r2
 51e:	08 95       	ret

Disassembly of section .text.avrlibc:

000008b6 <strnlen>:
 8b6:	cf 92       	push	r12
 8b8:	df 92       	push	r13
 8ba:	ef 92       	push	r14
 8bc:	6b 01       	movw	r12, r22
 8be:	e8 2e       	mov	r14, r24
 8c0:	a8 2f       	mov	r26, r24
 8c2:	cb 01       	movw	r24, r22
 8c4:	41 15       	cp	r20, r1
 8c6:	51 05       	cpc	r21, r1
 8c8:	31 f4       	brne	.+12     	; 0x8d6 <strnlen+0x20>
 8ca:	8c 19       	sub	r24, r12
 8cc:	9d 09       	sbc	r25, r13
 8ce:	ef 90       	pop	r14
 8d0:	df 90       	pop	r13
 8d2:	cf 90       	pop	r12
 8d4:	08 95       	ret
 8d6:	fc 01       	movw	r30, r24
 8d8:	24 91       	lpm	r18, Z
 8da:	a7 fd       	sbrc	r26, 7
 8dc:	20 81       	ld	r18, Z
 8de:	22 23       	and	r18, r18
 8e0:	a1 f3       	breq	.-24     	; 0x8ca <strnlen+0x14>
 8e2:	01 96       	adiw	r24, 0x01	; 1
 8e4:	a1 1d       	adc	r26, r1
 8e6:	41 50       	subi	r20, 0x01	; 1
 8e8:	51 09       	sbc	r21, r1
 8ea:	ec cf       	rjmp	.-40     	; 0x8c4 <strnlen+0xe>

Disassembly of section .text.avrlibc:

0000068c <fputc>:
 68c:	0f 93       	push	r16
 68e:	1f 93       	push	r17
 690:	cf 93       	push	r28
 692:	df 93       	push	r29
 694:	fb 01       	movw	r30, r22
 696:	24 81       	ldd	r18, Z+4	; 0x04
 698:	21 fd       	sbrc	r18, 1
 69a:	03 c0       	rjmp	.+6      	; 0x6a2 <fputc+0x16>
 69c:	8f ef       	ldi	r24, 0xFF	; 255
 69e:	9f ef       	ldi	r25, 0xFF	; 255
 6a0:	2c c0       	rjmp	.+88     	; 0x6fa <fputc+0x6e>
 6a2:	22 ff       	sbrs	r18, 2
 6a4:	16 c0       	rjmp	.+44     	; 0x6d2 <fputc+0x46>
 6a6:	47 81       	ldd	r20, Z+7	; 0x07
 6a8:	50 85       	ldd	r21, Z+8	; 0x08
 6aa:	25 81       	ldd	r18, Z+5	; 0x05
 6ac:	36 81       	ldd	r19, Z+6	; 0x06
 6ae:	42 17       	cp	r20, r18
 6b0:	53 07       	cpc	r21, r19
 6b2:	44 f4       	brge	.+16     	; 0x6c4 <fputc+0x38>
 6b4:	a0 81       	ld	r26, Z
 6b6:	b1 81       	ldd	r27, Z+1	; 0x01
 6b8:	9d 01       	movw	r18, r26
 6ba:	2f 5f       	subi	r18, 0xFF	; 255
 6bc:	3f 4f       	sbci	r19, 0xFF	; 255
 6be:	31 83       	std	Z+1, r19	; 0x01
 6c0:	20 83       	st	Z, r18
 6c2:	8c 93       	st	X, r24
 6c4:	27 81       	ldd	r18, Z+7	; 0x07
 6c6:	30 85       	ldd	r19, Z+8	; 0x08
 6c8:	2f 5f       	subi	r18, 0xFF	; 255
 6ca:	3f 4f       	sbci	r19, 0xFF	; 255
 6cc:	30 87       	std	Z+8, r19	; 0x08
 6ce:	27 83       	std	Z+7, r18	; 0x07
 6d0:	14 c0       	rjmp	.+40     	; 0x6fa <fputc+0x6e>
 6d2:	8b 01       	movw	r16, r22
 6d4:	ec 01       	movw	r28, r24
 6d6:	fb 01       	movw	r30, r22
 6d8:	01 84       	ldd	r0, Z+9	; 0x09
 6da:	f2 85       	ldd	r31, Z+10	; 0x0a
 6dc:	e0 2d       	mov	r30, r0
 6de:	09 95       	icall
 6e0:	89 2b       	or	r24, r25
 6e2:	e1 f6       	brne	.-72     	; 0x69c <fputc+0x10>
 6e4:	d8 01       	movw	r26, r16
 6e6:	17 96       	adiw	r26, 0x07	; 7
 6e8:	8d 91       	ld	r24, X+
 6ea:	9c 91       	ld	r25, X
 6ec:	18 97       	sbiw	r26, 0x08	; 8
 6ee:	01 96       	adiw	r24, 0x01	; 1
 6f0:	18 96       	adiw	r26, 0x08	; 8
 6f2:	9c 93       	st	X, r25
 6f4:	8e 93       	st	-X, r24
 6f6:	17 97       	sbiw	r26, 0x07	; 7
 6f8:	ce 01       	movw	r24, r28
 6fa:	df 91       	pop	r29
 6fc:	cf 91       	pop	r28
 6fe:	1f 91       	pop	r17
 700:	0f 91       	pop	r16
 702:	08 95       	ret

Disassembly of section .text.avrlibc:

00000520 <__ultoa_invert>:
 520:	fa 01       	movw	r30, r20
 522:	aa 27       	eor	r26, r26
 524:	28 30       	cpi	r18, 0x08	; 8
 526:	51 f1       	breq	.+84     	; 0x57c <__ultoa_invert+0x5c>
 528:	20 31       	cpi	r18, 0x10	; 16
 52a:	81 f1       	breq	.+96     	; 0x58c <__ultoa_invert+0x6c>
 52c:	e8 94       	clt
 52e:	6f 93       	push	r22
 530:	6e 7f       	andi	r22, 0xFE	; 254
 532:	6e 5f       	subi	r22, 0xFE	; 254
 534:	7f 4f       	sbci	r23, 0xFF	; 255
 536:	8f 4f       	sbci	r24, 0xFF	; 255
 538:	9f 4f       	sbci	r25, 0xFF	; 255
 53a:	af 4f       	sbci	r26, 0xFF	; 255
 53c:	b1 e0       	ldi	r27, 0x01	; 1
 53e:	3e d0       	rcall	.+124    	; 0x5bc <__ultoa_invert+0x9c>
 540:	b4 e0       	ldi	r27, 0x04	; 4
 542:	3c d0       	rcall	.+120    	; 0x5bc <__ultoa_invert+0x9c>
 544:	67 0f       	add	r22, r23
 546:	78 1f       	adc	r23, r24
 548:	89 1f       	adc	r24, r25
 54a:	9a 1f       	adc	r25, r26
 54c:	a1 1d       	adc	r26, r1
 54e:	68 0f       	add	r22, r24
 550:	79 1f       	adc	r23, r25
 552:	8a 1f       	adc	r24, r26
 554:	91 1d       	adc	r25, r1
 556:	a1 1d       	adc	r26, r1
 558:	6a 0f       	add	r22, r26
 55a:	71 1d       	adc	r23, r1
 55c:	81 1d       	adc	r24, r1
 55e:	91 1d       	adc	r25, r1
 560:	a1 1d       	adc	r26, r1
 562:	20 d0       	rcall	.+64     	; 0x5a4 <__ultoa_invert+0x84>
 564:	09 f4       	brne	.+2      	; 0x568 <__ultoa_invert+0x48>
 566:	68 94       	set
 568:	3f 91       	pop	r19
 56a:	2a e0       	ldi	r18, 0x0A	; 10
 56c:	26 9f       	mul	r18, r22
 56e:	11 24       	eor	r1, r1
 570:	30 19       	sub	r19, r0
 572:	30 5d       	subi	r19, 0xD0	; 208
 574:	31 93       	st	Z+, r19
 576:	de f6       	brtc	.-74     	; 0x52e <__ultoa_invert+0xe>
 578:	cf 01       	movw	r24, r30
 57a:	08 95       	ret
 57c:	46 2f       	mov	r20, r22
 57e:	47 70       	andi	r20, 0x07	; 7
 580:	40 5d       	subi	r20, 0xD0	; 208
 582:	41 93       	st	Z+, r20
 584:	b3 e0       	ldi	r27, 0x03	; 3
 586:	0f d0       	rcall	.+30     	; 0x5a6 <__ultoa_invert+0x86>
 588:	c9 f7       	brne	.-14     	; 0x57c <__ultoa_invert+0x5c>
 58a:	f6 cf       	rjmp	.-20     	; 0x578 <__ultoa_invert+0x58>
 58c:	46 2f       	mov	r20, r22
 58e:	4f 70       	andi	r20, 0x0F	; 15
 590:	40 5d       	subi	r20, 0xD0	; 208
 592:	4a 33       	cpi	r20, 0x3A	; 58
 594:	18 f0       	brcs	.+6      	; 0x59c <__ultoa_invert+0x7c>
 596:	49 5d       	subi	r20, 0xD9	; 217
 598:	31 fd       	sbrc	r19, 1
 59a:	40 52       	subi	r20, 0x20	; 32
 59c:	41 93       	st	Z+, r20
 59e:	02 d0       	rcall	.+4      	; 0x5a4 <__ultoa_invert+0x84>
 5a0:	a9 f7       	brne	.-22     	; 0x58c <__ultoa_invert+0x6c>
 5a2:	ea cf       	rjmp	.-44     	; 0x578 <__ultoa_invert+0x58>
 5a4:	b4 e0       	ldi	r27, 0x04	; 4
 5a6:	a6 95       	lsr	r26
 5a8:	97 95       	ror	r25
 5aa:	87 95       	ror	r24
 5ac:	77 95       	ror	r23
 5ae:	67 95       	ror	r22
 5b0:	ba 95       	dec	r27
 5b2:	c9 f7       	brne	.-14     	; 0x5a6 <__ultoa_invert+0x86>
 5b4:	00 97       	sbiw	r24, 0x00	; 0
 5b6:	61 05       	cpc	r22, r1
 5b8:	71 05       	cpc	r23, r1
 5ba:	08 95       	ret
 5bc:	9b 01       	movw	r18, r22
 5be:	ac 01       	movw	r20, r24
 5c0:	0a 2e       	mov	r0, r26
 5c2:	06 94       	lsr	r0
 5c4:	57 95       	ror	r21
 5c6:	47 95       	ror	r20
 5c8:	37 95       	ror	r19
 5ca:	27 95       	ror	r18
 5cc:	ba 95       	dec	r27
 5ce:	c9 f7       	brne	.-14     	; 0x5c2 <__ultoa_invert+0xa2>
 5d0:	62 0f       	add	r22, r18
 5d2:	73 1f       	adc	r23, r19
 5d4:	84 1f       	adc	r24, r20
 5d6:	95 1f       	adc	r25, r21
 5d8:	a0 1d       	adc	r26, r0
 5da:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00000848 <__prologue_saves__>:
 848:	2f 92       	push	r2
 84a:	3f 92       	push	r3
 84c:	4f 92       	push	r4
 84e:	5f 92       	push	r5
 850:	6f 92       	push	r6
 852:	7f 92       	push	r7
 854:	8f 92       	push	r8
 856:	9f 92       	push	r9
 858:	af 92       	push	r10
 85a:	bf 92       	push	r11
 85c:	cf 92       	push	r12
 85e:	df 92       	push	r13
 860:	ef 92       	push	r14
 862:	ff 92       	push	r15
 864:	0f 93       	push	r16
 866:	1f 93       	push	r17
 868:	cf 93       	push	r28
 86a:	df 93       	push	r29
 86c:	cd b7       	in	r28, 0x3d	; 61
 86e:	de b7       	in	r29, 0x3e	; 62
 870:	ca 1b       	sub	r28, r26
 872:	db 0b       	sbc	r29, r27
 874:	0f b6       	in	r0, 0x3f	; 63
 876:	f8 94       	cli
 878:	de bf       	out	0x3e, r29	; 62
 87a:	0f be       	out	0x3f, r0	; 63
 87c:	cd bf       	out	0x3d, r28	; 61
 87e:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

000008ec <__epilogue_restores__>:
 8ec:	2a 88       	ldd	r2, Y+18	; 0x12
 8ee:	39 88       	ldd	r3, Y+17	; 0x11
 8f0:	48 88       	ldd	r4, Y+16	; 0x10
 8f2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8f4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8f6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8f8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8fa:	9b 84       	ldd	r9, Y+11	; 0x0b
 8fc:	aa 84       	ldd	r10, Y+10	; 0x0a
 8fe:	b9 84       	ldd	r11, Y+9	; 0x09
 900:	c8 84       	ldd	r12, Y+8	; 0x08
 902:	df 80       	ldd	r13, Y+7	; 0x07
 904:	ee 80       	ldd	r14, Y+6	; 0x06
 906:	fd 80       	ldd	r15, Y+5	; 0x05
 908:	0c 81       	ldd	r16, Y+4	; 0x04
 90a:	1b 81       	ldd	r17, Y+3	; 0x03
 90c:	aa 81       	ldd	r26, Y+2	; 0x02
 90e:	b9 81       	ldd	r27, Y+1	; 0x01
 910:	ce 0f       	add	r28, r30
 912:	d1 1d       	adc	r29, r1
 914:	0f b6       	in	r0, 0x3f	; 63
 916:	f8 94       	cli
 918:	de bf       	out	0x3e, r29	; 62
 91a:	0f be       	out	0x3f, r0	; 63
 91c:	cd bf       	out	0x3d, r28	; 61
 91e:	ed 01       	movw	r28, r26
 920:	08 95       	ret
